# -*- coding: utf-8 -*-
"""introduccionmanejodedatos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kvFMpfB0KlmvcmfhViidsWD2iYKqyhFN
"""

import numpy as np

my_list = [1, 2, 3, 4, 5]
arr = np.array(my_list)
print(arr)

zeros = np.zeros(5)
print(zeros)

ones = np.ones(5)
print(ones)

arr1 = np.array([1, 2, 3])
arr2 = np.array([4, 5, 6])
resultado = arr1 + arr2
print(resultado)

resultado = arr1 * arr2
print(resultado)

arr = np.array([1, 2, 3])
result = arr + 5
print(result)

arr1 = np.array([1, 2, 3])
arr2 = np.array([[10], [20], [30]])
result = arr1 + arr2
print(result)


arr = np.array([1, 2, 3, 4, 5])
slice = arr[1:4]
print(slice)

arr = np.array([1, 2, 3, 4, 5])
mask = arr > 2
result = arr[mask]
print(result)

arr = np.array([1, 2, 3, 4, 5])
indices = np.array([0, 2, 4])
result = arr[indices]
print(result)


arr1 = np.array([1, 2, 3])
arr2 = np.array([4, 5, 6])
concatenated = np.concatenate((arr1, arr2))
print(concatenated)

arr = np.array([1, 2, 3, 4, 5, 6])
split = np.split(arr, 3)
print(split)


consumo = np.array([
    [12.5, 13.2, 11.9, 14.0, 13.5, 15.0, 14.3],
    [10.1, 10.5, 10.0, 11.2, 11.5, 12.0, 11.8],
    [14.0, 14.2, 13.9, 15.5, 15.1, 16.0, 15.8],
    [9.0, 9.2, 8.9, 9.5, 9.8, 10.0, 9.7],
    [16.2, 16.5, 16.0, 17.1, 17.4, 18.0, 17.8],
    [11.0, 11.3, 11.1, 12.0, 12.4, 12.8, 12.5],
    [13.5, 13.8, 13.2, 14.1, 14.6, 15.0, 14.9],
    [10.8, 11.0, 10.6, 11.5, 11.8, 12.2, 12.0],
    [15.1, 15.5, 15.0, 16.0, 16.4, 17.0, 16.7],
    [8.5, 8.7, 8.4, 9.0, 9.2, 9.5, 9.3],
])
print("dimensiones: ", consumo.ndim )
print("forma: ", consumo.shape )
print("tipo de datos: ", consumo.dtype )
print("consumo primera casa: ", consumo[0] )
print("consumo el miercoles: ", consumo[:,2] )
promedio_dia = np.mean(consumo, axis=0)
print("promedio por dia: ", promedio_dia)
promedio_casa = np.mean(consumo, axis=1)
print("promedio por casa: ", promedio_casa)
total_consumo = np.sum(consumo)
print("total consumo: ", total_consumo)
maximo_casa = np.max(consumo, axis=1)
print("consumo maximo por casa: ", maximo_casa)
minimo_dia = np.min(consumo, axis=0)
print("consumo minimo por dia: ", minimo_dia)
desviacion = np.std(consumo)
print("desviacion estandar", desviacion)
consumo_total_casa = np.sum(consumo, axis=1)
print("consumo total por casa: ", consumo_total_casa)
consumo_mayor_casa = np.argmax(consumo_total_casa)
print("consumo mayor por casa: ", consumo_mayor_casa)
consumo_menor_casa = np.argmin(consumo_total_casa)
print("consumo menor por casa: ", consumo_menor_casa)

#pregunta 1
print("Consumo hogar 5 el viernes:", consumo[4][4])
#pregunta 2
print("Consumo de los últimos 3 hogares el domingo:", consumo[7:, 6])
#pregunta 3
fines_de_semana = consumo[:, 5:7]
promedio_fds = np.mean(fines_de_semana)
print("Promedio de consumo fines de semana:", promedio_fds)
#pregunta 4
desviaciones_dias = np.std(consumo, axis=0)
dia_mayor_desviacion = np.argmax(desviaciones_dias)
print("Día con mayor desviación estándar:", dia_mayor_desviacion)
#pregunta 5
total_por_casa = np.sum(consumo, axis=1)
indices_menor_consumo = np.argsort(total_por_casa)[:3]
valores_menor_consumo = total_por_casa[indices_menor_consumo]
print("Índices:", indices_menor_consumo)
print("Consumos:", valores_menor_consumo)
#pregunta 6
nuevo_consumo_3 = consumo[2] * 1.10
total_nuevo_3 = np.sum(nuevo_consumo_3)
print("Nuevo consumo total del hogar 3:", total_nuevo_3)

